# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI CONF

on:
  push:
    branches: [ "main" ]
    
permissions:
  contents: read

jobs:
  build:
    defaults:
      run:
        working-directory: ./backend/node-conf
        
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew bootJar          

      - name: Execute Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew bootJar          

      - name: Just fucking directory mazafaka
        run: echo "$(ls build/libs/)"

      - name: Copy Jar file
        run: mv build/libs/node-conf-0.0.1-SNAPSHOT-boot.jar ./node-conf.jar

#      - uses: actions/upload-artifact@master
#        with:
#          name: jar-file
#          path: ./backend/node-conf/node-conf.jar
#
#  build-image:
#    defaults:
#      run:
#        working-directory: ./backend/node-conf
#
#    runs-on: ubuntu-latest
#    needs: build
#
#    steps:
#
#      - uses: actions/checkout@v3
#
#      - uses: actions/download-artifact@master
#        with:
#          name: jar-file
#          path: ./backend/node-conf/node-conf.jar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set env
        run: echo "DATE=$(date +%s)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./backend/node-conf/
          push: true
          tags: germikgerman/node-conf:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: executing remote ssh commands using key
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.AWS_HOSTNAME }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SECRET_KEY }}
          port: 22
          script: |
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/node-conf
            docker stop node-conf
            docker container rm node-conf
            docker run --name node-conf -d -p 8080:8080 germikgerman/node-conf